[project]
name = "task-manager-api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.2",
    "dotenv>=0.9.9",
    "fastapi>=0.115.13",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pydantic[email]>=2.11.7",
    "pydantic-settings>=2.10.0",
    "pyjwt>=2.10.1",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.34.3",
    "pytest>=8.0.0",
    "httpx>=0.24.0",
    "python-multipart>=0.0.6",
    "pytest-cov>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "pip-audit>=2.6.0",
]

[tool.ruff]
# Настройки для ruff (линтер)
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
# Настройки для black (форматер)
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
# Настройки для mypy (проверка типов)
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
no_implicit_optional = true

# Skip checking specific paths
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "tests/"
]

[[tool.mypy.overrides]]
module = [
    "passlib.*",
    "sqlalchemy.*",
    "alembic.*",
    "uvicorn.*",
    "pytest.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
# Настройки для pytest
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
# Настройки для coverage
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
# Настройки отчетов coverage
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B104"]  # Skip hardcoded bind all interfaces warning for development

[dependency-groups]
dev = [
    "types-passlib>=1.7.7.20250602",
]
