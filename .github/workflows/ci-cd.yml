name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: |
        uv sync
    
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U testuser; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
    
    - name: Run database migrations
      env:
        DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
        TEST_DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
      run: |
        uv run alembic upgrade head
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
        TEST_DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
        JWT_SECRET_KEY: test-secret-key-for-ci
        JWT_ALGORITHM: HS256
        JWT_EXPIRATION_TIME_MINUTES: 30
      run: |
        uv run pytest tests/ -v
  # Деплой в Render (только при коммите в main)
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
